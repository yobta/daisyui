:root {
  --font-size-menu: 1rem;
  --font-size-menu-md: 1rem;
  --font-size-menu-lg: 1.125rem;
  --font-size-menu-sm: 0.875rem;
  --font-size-menu-xs: 0.75rem;

  --font-weight-menu: 500;
  --font-weight-menu-md: 500;
  --font-weight-menu-lg: 600;
  --font-weight-menu-sm: 500;
  --font-weight-menu-xs: 500;

  --gap-menu: 0.5rem;
  --gap-menu-md: 0.5rem;
  --gap-menu-lg: 0.75rem;
  --gap-menu-sm: 0.25rem;
  --gap-menu-xs: 0.125rem;

  --height-menu: 3rem;
  --height-menu-md: 3rem;
  --height-menu-lg: 3.5rem;
  --height-menu-sm: 2.5rem;
  --height-menu-xs: 2rem;

  --padding-menu: 1rem;
  --padding-menu-md: 1rem;
  --padding-menu-lg: 1.25rem;
  --padding-menu-sm: 0.75rem;
  --padding-menu-xs: 0.5rem;

  --spacing-menu: 0.5px;
}

/* #region: Sizes */
.menu-xs {
  --font-size-menu: var(--font-size-menu-xs);
  --font-weight-menu: var(--font-weight-menu-xs);
  --gap-menu: var(--gap-menu-xs);
  --height-menu: var(--height-menu-xs);
  --padding-menu: var(--padding-menu-xs);
}
.menu-sm {
  --font-size-menu: var(--font-size-menu-sm);
  --font-weight-menu: var(--font-weight-menu-sm);
  --gap-menu: var(--gap-menu-sm);
  --height-menu: var(--height-menu-sm);
  --padding-menu: var(--padding-menu-sm);
}
.menu-md {
  --font-size-menu: var(--font-size-menu-md);
  --font-weight-menu: var(--font-weight-menu-md);
  --gap-menu: var(--gap-menu-md);
  --height-menu: var(--height-menu-md);
  --padding-menu: var(--padding-menu-md);
}
.menu-lg {
  --font-size-menu: var(--font-size-menu-lg);
  --font-weight-menu: var(--font-weight-menu-lg);
  --gap-menu: var(--gap-menu-lg);
  --height-menu: var(--height-menu-lg);
  --padding-menu: var(--padding-menu-lg);
}
/* #endregion: Sizes */

/* #region: Colors */
.menu-paper > * {
  @apply bg-paper;
}
.menu-paper-2 > * {
  @apply bg-paper-2;
}
/* #endregion: Colors */

/* #region: Roundings */
.menu-rounded {
  @apply rounded-box;
}

.menu.menu-outlined {
  @apply bg-ink bg-opacity-60 ring-menu ring-ink ring-opacity-60;
}
.menu-rounded.menu-rounded {
  & > * {
    @apply rounded-none;
  }
  &.menu-horizontal {
    & > *:first-child {
      @apply rounded-tl-inherit rounded-bl-inherit rounded-tr-none rounded-br-none;
    }
    & > *:last-child {
      @apply rounded-tr-inherit rounded-br-inherit rounded-tl-none rounded-bl-none;
    }
  }
  &:not(.menu-horizontal),
  &.menu-vertical {
    & > *:first-child {
      @apply rounded-tl-inherit rounded-bl-none rounded-tr-inherit rounded-br-none;
    }
    & > *:last-child {
      @apply rounded-tr-none rounded-br-inherit rounded-tl-none rounded-bl-inherit;
    }
  }
  & > :only-child,
  &:not(.menu-horizontal) > :only-child,
  &.menu-vertical > :only-child,
  &.menu-horizontal > :only-child {
    @apply rounded-tl-inherit rounded-tr-inherit rounded-bl-inherit rounded-br-inherit;
  }
}
/* #endregion: Roundings */

/* #region: Menu Items */
.menu-item,
.menu
  :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn, .navbar)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  @apply text-start content-center rounded-inherit transition-colors duration-500 gap-menu-item;
  font-size: var(--font-size-menu);
  font-weight: var(--font-weight-menu);
  height: var(--height-menu);
  padding-left: var(--padding-menu);
  padding-right: var(--padding-menu);
  text-wrap: balance;

  @media (hover: hover) {
    &:hover {
      @apply transition-colors duration-150;
      @supports (color: color-mix(in oklab, currentColor, currentColor)) {
        background-color: color-mix(
          in oklab,
          oklch(var(--bg-current, var(--b2)) / var(--tw-bg-opacity, 1)) 92%,
          currentColor 8%
        );
        border-color: currentColor;
      }
    }
  }
}

.menu-item-selected,
.menu li[aria-checked='true'] > *:not(ul, .menu-title, details, .btn),
.menu li > *:not(ul, .menu-title, details, .btn).selecte {
  @apply bg-accent;
}

.menu-item-active,
.menu li:not(.menu-title) > *:not(ul, details, .btn):active,
.menu li:not(.menu-title) > *:not(ul, details, .btn).active,
.menu li:not(.menu-title) > details > summary:active {
  background-color: color-mix(
    in oklab,
    oklch(var(--bg-current, var(--b2)) / var(--tw-bg-opacity, 1)) 84%,
    currentColor 16%
  );
}

.menu-item-disabled,
.menu li.disabled,
.menu.disabled > *,
.menu[aria-disabled='true'] > *,
.menu li[aria-disabled='true'] {
  @apply cursor-not-allowed;
  opacity: unset;
  pointer-events: unset;
  > * {
    @apply opacity-60 pointer-events-none;
  }
}

:where(.menu li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title)),
:where(
    .menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
  ) {
  &:not(summary, .active, .btn).focus,
  &:not(summary, .active, .btn):focus,
  &:is(summary):not(.active, .btn):focus-visible {
    @apply outline-none;
  }
  @media (hover: hover) {
    &:not(.active, .btn):hover {
      @apply cursor-pointer outline-none;
      @supports (color: oklch(0% 0 0)) {
        @apply bg-base-content/10;
      }
    }
  }
}
/* #endregion: Menu Items */

/* #region: Separator */
.menu-separator,
.menu-vertical > .menu-separator,
.menu-vertical > [role='separator'],
:where(.menu li:empty),
.menu-vertical > :where(.menu li:empty) {
  height: var(--spacing-menu);
  width: var(--padding-menu);
}

.menu-horizontal > .menu-separator,
.menu-horizontal > [role='separator'],
.menu-horizontal > :where(.menu li:empty) {
  height: var(--padding-menu);
  width: var(--spacing-menu);
}
/* #endregion: Separator */

.menu-title {
  @apply text-center gap-menu-item select-none items-center justify-center;

  font-size: calc(var(--font-size-menu) * 0.8);
  font-weight: calc(var(--font-weight-menu) + 100);
  height: calc(var(--height-menu) * 0.8);
}

.menu :where(li ul) {
  @apply ms-4 ps-2;
  &:before {
    @apply bg-base-content absolute bottom-3 start-0 top-3 w-px opacity-10;
    content: '';
  }
}

.menu :where(li > details > summary)::-webkit-details-marker {
  @apply hidden;
}
.menu :where(li > details > summary):after,
.menu :where(li > .menu-dropdown-toggle):after {
  @apply justify-self-end;
  display: block;
  margin-top: -0.5rem;
  height: 0.5rem;
  width: 0.5rem;
  transform: rotate(45deg);
  transition-property: transform, margin-top;
  transition-duration: 0.3s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  content: '';
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}
.menu :where(li > details[open] > summary):after,
.menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
  transform: rotate(225deg);
  margin-top: 0;
}
